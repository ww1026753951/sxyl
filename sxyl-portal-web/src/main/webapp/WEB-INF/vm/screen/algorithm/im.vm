<!DOCTYPE html>
<head>

    <script src='https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_SVG' ></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/latest.js?config=TeX-MML-AM_SVG' ></script>

    <script>
        MathJax.Hub.Config({
            showProcessingMessages: false,
            // jax: ["input/TeX", "output/HTML-CSS"],
            jax: ["input/TeX", "output/SVG"],
            TeX: {
                TagSide: "left",
                Macros: {
                    RR: '{\\bf R}',
                    bold: ['{\\bf #1}',1]
                }
            }
        });
    </script>

</head>
<meta charset="utf-8">
<link href="/css/animate/animate.min.css" rel="stylesheet">
<script>
    // var callbacks = [];
    // requestAnimationFrame = function(callback) {
    //     callbacks.push(callback);
    // };
    //
    // flushAnimationFrames = function() {
    //     debugger
    //     var now = Date.now;
    //     Date.now = function() { return Infinity; };
    //     callbacks.forEach(function(callback) { try { callback(); } catch (e) { console.error(e); } });
    //     callbacks = [];
    //     Date.now = now;
    // };


</script>
<body>
<div style="color: red">
    $$net1 = x1*w1+x2*w2+x3*w3......+wn*xn+bias$$ $$bias$$

</div>
<p>
##    When \(a \ne 0\), there are two solutions to \(ax^2 + bx + c = 0\) and they are
    <span>$$x = {-b \pm \sqrt{b^2-4ac} \over 2a}$$</span>  <span>$$x = {a \over -b \pm \sqrt{b^2-4ac}}$$</span>
</p>
##<p>
##    $$x = {a \over -b \pm \sqrt{b^2-4ac}}$$
##</p>
<svg width="1200" height="1200" id="sortAlg">


##    z = 半径除以 10    cx - z - 文本的宽度计算     cy + z

##    <g id="g1">
##        <circle id="testCircle" cx="100" cy="50" r="40" stroke="black" fill="blue"/>
##        <text x="96" y="54" fill="red">S</text>
##    </g>
##
##    <line x1="128" y1="78" x2="300" y2="200" style="stroke:rgb(99,99,99);stroke-width:2"/>

##    292
##    <g id="g2">
##        <circle id="testCircle2" cx="300" cy="200" r="80" stroke="black" fill="white"/>
##        <text id="d2" x="252" y="208" fill="red">llllllllllll</text>
##    </g>



##    <g id="g3">
##        <circle id="testCircle3" cx="600" cy="200" r="30" stroke="black" fill="white"/>
##        <text id="d3" x="596" y="204" fill="red">3</text>
##    </g>
##
##    <line x1="155" y1="150" x2="365" y2="250" style="stroke:rgb(99,99,99);stroke-width:1"></line>
##    <line x1="200.16" y1="171.50" x2="365" y2="250" style="stroke:rgb(99,99,99);stroke-width:1"></line>
    <text id="text1" x="205" y="150">需要重新定义标签 $$x = {-b \pm \sqrt{b^2-4ac} \over 2a}$$</text>
##    <object>$$net1 = x1*w1+x2*w2+x3*w3......+wn*xn+bias$$</object>
    <g></g>
</svg>


</body>
##<script src="//d3js.org/d3.v3.min.js"></script>
<script src="/js/d3/d3.min.js"></script>
<script src="/js/jquery/jquery-3.2.1.min.js" ></script>

<script src="/js/sxyl.js"></script>



<script src="/js/sxyl.graph.js"></script>
<script>


    var val = $("#d2").text().length  ;

    var width = $("#d2").width()
    var width1 = $("#d2").innerWidth()
    var width2 = $("#d2").outerWidth()
    var width3 = $("#d2").outerWidth(true)



    var cy = 100;
    $.ajax({
        type: 'POST',
        url: "/ml/dnnConstruct",
        success: function (d) {
            var parent = SXYL.GRAPH.getContext();
            SXYL.GRAPH.initPosition();
            SXYL.GRAPH.drawByComponent(parent , d);
            // SXYL.GRAPH.L(parent,"inputLayer1-0","outputLayer1-2")
            test_d();
        }
    });


    function test_d() {

        var rectLeft = d3.select("#text1" ) ;
        var rectRight = d3.select("#hiddenLayer1-0" ) ;

        rectLeft.attr("fill","red")         //初始颜色为红色
                .transition().duration(5000)          //启动过渡
                .attr("x",400).attr("y",400)

        //终止颜色为铁蓝色
    }




    MathJax.Hub.Register.StartupHook("End", function(){

        debugger
        var svg = d3.select('#sortAlg');
        svg.selectAll('.tick').each(function(){

            var self = d3.select(this),
                    g = self.select('text>div>span>svg');

            g.remove();
            self.append(function(){
                return g.node();
            });
        });

    })
</script>